---
- name: Set facts
  ansible.builtin.set_fact:
    user_name: ruuvitag
    group_name: ruuvitag
    home_dir: '/home/ruuvitag'
    repo_folder: 'temperatures'
    repo_subfolder: 'ruuvitag-reader'

- name: Ensure user exists with name "{{ user_name }}"
  ansible.builtin.include_role:
    name: user_creator
  vars:
    name: '{{ user_name }}'
    user_groups: '{{ group_name }}'
    home: '{{ home_dir }}'

- name: Install ruuvitag-sensor
  ansible.builtin.include_role:
    name: git_installer
  vars:
    git_repo_url: '{{ git_repositories.temperatures }}'
    git_repo_name: '{{ repo_folder }}'
    git_repo_subfolder: '{{ repo_subfolder }}'
    git_repo_destination: '{{ home_dir }}'
    git_repo_destination_owner: '{{ user_name }}'
    git_repo_destination_group: '{{ group_name }}'

- name: Stop systemd unit
  become: true
  ansible.builtin.systemd:
    state: stopped
    name: ruuvitag_reader.timer
    enabled: true
  ignore_errors: true

- name: Build the application
  become: true
  become_user: '{{ user_name }}'
  ansible.builtin.shell: |
    /usr/local/go/bin/go build .
  args:
    chdir: '{{ home_dir }}/{{ repo_subfolder }}'

- name: Create config.yml
  become: true
  ansible.builtin.copy:
    dest: '{{ home_dir }}/{{ repo_subfolder }}/config.yml'
    owner: '{{ user_name }}'
    group: '{{ group_name }}'
    mode: '0770'
    content: '{{ ruuvi.external_configuration | to_nice_yaml }}'

- name: Create .env
  no_log: true
  become: true
  ansible.builtin.copy:
    dest: '{{ home_dir }}/{{ repo_subfolder }}/.env'
    owner: '{{ user_name }}'
    group: '{{ group_name }}'
    mode: '0640'
    content: |
      INFLUXDB_URL: {{ influxdb.url }}
      INFLUXDB_TOKEN: {{ influxdb.api_token }}
      INFLUXDB_BUCKET: {{ influxdb.bucket }}
      INFLUXDB_ORG: {{ influxdb.org }}
      POSTGRESQL_CONN_URL: {{ postgresql.conn_url }}
      RUUVI_HTTP_SERVER_ADD_MEASUREMENT_API_URL: {{ ruuvi_http.api }}

- name: Create systemd service unit
  become: true
  ansible.builtin.copy:
    dest: /etc/systemd/system/ruuvitag_reader.service
    content: |
      [Unit]
      Description=Service reading data from Ruuvitags
      After=multi-user.target
      [Service]
      Type=oneshot
      Restart=no
      ExecStart={{ home_dir }}/{{ repo_subfolder }}/ruuvitag-reader
      User={{ user_name }}
      CapabilityBoundingSet=CAP_NET_RAW CAP_NET_ADMIN
      AmbientCapabilities=CAP_NET_RAW CAP_NET_ADMIN
      [Install]
      WantedBy=multi-user.target

- name: Create systemd timer unit
  become: true
  ansible.builtin.copy:
    dest: /etc/systemd/system/ruuvitag_reader.timer
    content: |
      [Unit]
      Description=Start Ruuvitag reader service
      [Timer]
      OnCalendar=*:0/3
      [Install]
      WantedBy=timers.target

- name: Start systemd unit timer
  become: true
  ansible.builtin.systemd:
    daemon_reload: true
    state: restarted
    name: ruuvitag_reader.timer
    enabled: true

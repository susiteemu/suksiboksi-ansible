---
- name: Set facts
  ansible.builtin.set_fact:
    user_name: dbg
    group_name: dbg
    home_dir: '/home/dbg'
    repo_folder: 'dbg'

- name: Ensure user with correct settings exists
  ansible.builtin.include_role:
    name: docker_enabled_user_creator
  vars:
    name: '{{ user_name }}'
    user_group: '{{ group_name }}'
    home: '{{ home_dir }}'

- name: Clone Dish! Bash! Go!
  ansible.builtin.include_role:
    name: git_installer
  vars:
    git_repo_url: '{{ git_repositories.dbg }}'
    git_repo_name: '{{ repo_folder }}'
    git_repo_destination: '{{ home_dir }}'
    git_repo_destination_owner: '{{ user_name }}'
    git_repo_destination_group: '{{ group_name }}'

- name: Build the application
  become: true
  become_user: '{{ user_name }}'
  ansible.builtin.shell: |
    /usr/local/go/bin/go build .
  args:
    chdir: '{{ home_dir }}/{{ repo_folder }}'

- name: Stop systemd unit
  become: true
  ansible.builtin.systemd:
    state: stopped
    name: dbg.service
  ignore_errors: true

- name: Backup database
  become: true
  ansible.builtin.copy:
    remote_src: true
    src: '{{ home_dir }}/{{ repo_folder }}/dishbashgo.db'
    dest: '{{ home_dir }}/{{ repo_folder }}/dishbashgo.db.bck'
    owner: '{{ user_name }}'
    group: '{{ group_name }}'
    mode: 'preserve'

- name: Create systemd service unit
  become: true
  ansible.builtin.copy:
    dest: /etc/systemd/system/dbg.service
    content: |
      [Unit]
      Description=Service for running Dish! Bash! Go! application
      After=syslog.target
      [Service]
      WorkingDirectory={{ home_dir }}/{{ repo_folder}}
      Type=simple
      Restart=on-failure
      ExecStart={{ home_dir }}/{{ repo_folder }}/dish-bash-go
      [Install]
      WantedBy=multi-user.target

- name: Start systemd unit
  become: true
  ansible.builtin.systemd:
    daemon_reload: true
    state: restarted
    name: dbg.service
    enabled: true
